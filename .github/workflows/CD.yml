run-name: Deploy to AWS by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      version:
        description: '이전 버전과 다른 상위 버전을 입력해주세요. (ex. 1.0.0)'
        default: '1.0.0'
        required: true
        type: string

    permissions:
      users:
        - saJaeHyukc

jobs:
  django-test-and-fomat-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create env file
        env:
          DJANGO_TEST_ENV: ${{ secrets.DJANGO_TEST_ENV }}
        run: |
          touch .env.django
          echo "$DJANGO_TEST_ENV" >> .env.django

      - name: Build docker
        run: docker compose -f github-actions.docker-compose.yml build

      - name: Run isort
        run: docker compose -f github-actions.docker-compose.yml run django poetry run isort jurin/ --check

      - name: Run black
        run: docker compose -f github-actions.docker-compose.yml run django poetry run black jurin/ --check

      - name: Run flake8
        run: docker compose -f github-actions.docker-compose.yml run django poetry run flake8

      - name: Run mypy
        run: docker compose -f github-actions.docker-compose.yml run django poetry run mypy --config mypy.ini jurin/

      - name: Run tests
        run: docker compose -f github-actions.docker-compose.yml run django poetry run coverage run manage.py test && coverage report --fail-under=90

  django-deploy:
    runs-on: ubuntu-latest
    needs: django-test-and-fomat-lint

    steps:
      - name: Deploy
        uses: appleboy/ssh-action@v0.1.5
        with:
          key: ${{ secrets.DEV_EC2_KEY }}
          host: ${{ secrets.DEV_EC2_IP }}
          username: ${{ secrets.DEV_EC2_NAME }}
          port: ${{ secrets.DEV_EC2_PORT }}
          script: |
            cd ${{ secrets.DEV_EC2_PATH }}
            git pull origin develop
            cd ../../
            sudo docker compose restart django
